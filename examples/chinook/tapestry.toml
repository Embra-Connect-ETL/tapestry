## This manifest file has been automatically generated by the `tapestry
## init` command.
##
## You may update this file as per your requirements. Please refer to
## the manifest documentation and example provided in the github repo
## https://github.com/naiquevin/tapestry/blob/main/examples/chinook/tapestry.toml
##
## Note that all values that represent a file/dir path should be
## relative to this manifest file.
## ---

## Whether the placeholder in queries should use `posargs` (positional
## arguments) or `variables` syntax
placeholder = "posargs"

query_templates_dir = "templates/queries"
test_templates_dir = "templates/tests"

## Dirs under which the rendered sql files will be created. Note that
## the `tapestry init` command doesn't create these dirs. They will be
## created whenever the `tapestry render` command will be run for the
## first time.
queries_output_dir = "output/queries"
tests_output_dir = "output/tests"

[formatter.pgFormatter]
## (required) Location of the pg_format executable
exec_path = "pg_format"
## (optional) path to the pg_format conf file.
conf_path = "./.pg_format/config"

## Whether or not the generated SQL is to be name-tagged. Name tagging
## is required with libs such as yesql, aiosql. Remove this section to
## disable name tagging
[name_tagger]
## Name tagging style. Supported options: 'kebab-case', 'snake_case', 'exact'
style = "kebab-case"

## Specify `query_templates`, `queries` and `test_templates` below
## this comment. Please refer to the manifest documentation and
## example provided in the github repo -
## https://github.com/naiquevin/tapestry/blob/main/examples/chinook/tapestry.toml

[[query_templates]]
path = "artists_long_songs.sql.j2"
all_conds = [ "genre", "limit" ]

[[query_templates]]
path = "songs_formats.sql.j2"
all_conds = [ "artist", "file_format", "album_name" ]

[[queries]]
id = "artists_long_songs"
template = "artists_long_songs.sql.j2"
conds = []

[[queries]]
id = "artists_long_songs*limit"
template = "artists_long_songs.sql.j2"
conds = [ "limit" ]

[[queries]]
id = "artists_long_songs@genre*limit"
template = "artists_long_songs.sql.j2"
conds = [ "genre", "limit" ]

[[queries]]
id = "songs_formats@artist+album"
template = "songs_formats.sql.j2"
conds = [ "artist", "album_name" ]
# output file name is optional. If not specified, it will be generated
# from the id by replacing the special characters with hyphens
output = "songs_formats__artist__album.sql"

[[queries]]
id = "songs_formats@artist&file_format+album"
template = "songs_formats.sql.j2"
conds = [ "artist", "album_name", "file_format" ]

[[test_templates]]
query = "artists_long_songs@genre*limit"
path = "artists_long_songs-genre-limit_test.sql.j2"

[[test_templates]]
query = "artists_long_songs"
path = "all_artists_long_songs_test.sql.j2"
# output file name is optional. If not specified, it will be derived
# from the `path`.
output = "all_artists_long_songs_count_test.sql"

[[test_templates]]
query = "songs_formats@artist&file_format+album"
path = "songs_formats-afa_test.sql.j2"