# Whether the placeholder in queries should use `posargs` (positional
# arguments) or `variables` syntax
placeholder = "posargs"

query_templates_dir = "templates/queries"
test_templates_dir = "templates/tests"
# Where the rendered sql files will be created. The paths must be
# relative to this manifest file.
queries_output_dir = "output/queries"
tests_output_dir = "output/tests"

[[query_templates]]
path = "songs.sql.j2"
all_conds = [ "artist", "file_format", "album_name" ]

[[query_templates]]
path = "artists_long_songs.sql.j2"
all_conds = [ "genre", "limit" ]

[[queries]]
id = "songs@artist+album"
template = "songs.sql.j2"
conds = [ "artist", "album_name" ]
# output file name is optional. If not specified, it will be generated
# from the id by replacing the special characters with hyphens
output = "songs__artist__album.sql"

[[queries]]
id = "songs@artist&file_format+album"
template = "songs.sql.j2"
conds = [ "artist", "album_name", "file_format" ]

[[queries]]
id = "artists_long_songs"
template = "artists_long_songs.sql.j2"
conds = []

[[queries]]
id = "artists_long_songs@genre*limit"
template = "artists_long_songs.sql.j2"
conds = [ "genre", "limit" ]

[[test_templates]]
query = "songs@artist&file_format+album"
# Following variables will be available inside the template
#
#  1. prepared_statement
#
# (only 1 for now)
path = "songs_test.sql.j2"

[[test_templates]]
query = "artists_long_songs@genre*limit"
path = "artists_long_songs_test.sql.j2"
# output file name is optional. If not specified, it will be generated
# from the id by replacing the special characters with hyphens and
# then suffixing `_test<n>`
output = "artists_long_songs-genre-limit_test01.sql"

